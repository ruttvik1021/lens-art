"use client";

import { MobileNav } from "@/components/mobile-nav";
import { ScrollToTop } from "@/components/scroll-to-top";
import { SmoothScrollHandler } from "@/components/smooth-scroll";
import { motion } from "framer-motion";
import { Camera } from "lucide-react";
import localFont from "next/font/local";
import { useRouter } from "next/navigation";
import "./globals.css";
import { navLinks, smoothScrollTo } from "@/lib/utils";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const router = useRouter();
  const handleNavigation = (item: string) => {
    if (item.startsWith("#")) {
      smoothScrollTo(item.toLowerCase());
    } else {
      router.push(item);
    }
  };

  return (
    <html lang="en">
      <motion.nav
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
        className="fixed top-0 w-full bg-white/90 backdrop-blur-md z-50 border-b"
      >
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <motion.div
            className="flex items-center space-x-2"
            whileHover={{ scale: 1.05 }}
          >
            <Camera className="h-6 w-6 sm:h-8 sm:w-8 text-rose-600" />
            <span className="text-xl sm:text-2xl font-bold text-gray-900">
              LensArt
            </span>
          </motion.div>

          {/* Desktop Navigation */}
          <div className="hidden md:flex space-x-6 lg:space-x-8">
            {navLinks.map((item) => (
              <motion.button
                key={item.path}
                onClick={() => handleNavigation(item.path)}
                className="text-gray-700 hover:text-rose-600 transition-colors cursor-pointer text-sm lg:text-base"
                whileHover={{ y: -2 }}
              >
                {item.label}
              </motion.button>
            ))}
          </div>

          {/* Mobile Navigation */}
          <MobileNav />
        </div>
      </motion.nav>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="min-h-screen bg-white">
          <SmoothScrollHandler />
          <ScrollToTop />
          {children}
        </div>
      </body>
    </html>
  );
}
